import requests
from os import path
import argparse
import sys
parser = argparse.ArgumentParser()
parser.add_argument('-t', '--target', help='Inidicar el dominion de la victima')
parser = parser.parse_args()

def main():
    if parser.target:
        if path.exists('diccionario.txt'):
            wordlist = open('diccionario.txt', 'r')
            wordlist = wordlist.read().split('\n')

            subdominios_encontrados = False  # Bandera para verificar si encontramos subdominios

            for subdominio in wordlist:
                # Verificamos si el subdominio está vacío y lo saltamos
                if not subdominio.strip():  # .strip() elimina espacios en blanco
                    continue

                print(subdominio)
                url = "http://"+subdominio+"."+parser.target
                try:
                    requests.get(url)
                except requests.ConnectionError:
                    pass
                else:
                    print("(+) Subdominio encontrado: "+url)
                    subdominios_encontrados = True  # Marcamos que encontramos un subdominio

            for subdominio in wordlist:
                # Verificamos si el subdominio está vacío y lo saltamos
                if not subdominio.strip():  # .strip() elimina espacios en blanco
                    continue

                url = "https://"+subdominio+"."+parser.target
                try:
                    requests.get(url)
                except requests.ConnectionError:
                    pass
                else:
                    print("(+) Subdominio encontrado: "+url)
                    subdominios_encontrados = True  # Marcamos que encontramos un subdominio

            # Al finalizar los bucles, verificamos si encontramos subdominios
            if not subdominios_encontrados:
                print("(+) No se encontraron subdominios válidos.")

        else:
            print("(+) El archivo 'subdominios.txt' no existe.")
    else:
        print("(+) Ingresa un dominio")



if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        sys.exit()
